name: Telegram Bot Webhook Handler

on:
  repository_dispatch:
    types: [telegram_update]  # 监听 Telegram Webhook 事件

jobs:
  handle-update:
    runs-on: ubuntu-latest
    steps:
      - name: Handle Telegram Update
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
          GH_PAT: ${{ secrets.GH_PAT }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
          WORKFLOW_FILE: wispbyte-auto-login.yml  # 你的主 Workflow 文件名
          EVENT_PAYLOAD: ${{ toJson(github.event.client_payload) }}  # Telegram Update JSON
        run: |
          # 安装 jq（解析 JSON）
          sudo apt update && sudo apt install -y jq

          # 解析 Telegram Update
          UPDATE=$(echo '$EVENT_PAYLOAD' | jq -r '.')
          MESSAGE_TEXT=$(echo "$UPDATE" | jq -r '.message.text // empty')
          CALLBACK_DATA=$(echo "$UPDATE" | jq -r '.callback_query.data // empty')
          CHAT_ID=$(echo "$UPDATE" | jq -r '.message.chat.id // .callback_query.message.chat.id // empty')

          # 检查命令或按钮
          ACTION=""
          if [ "$MESSAGE_TEXT" = "/retry" ] || [ "$CALLBACK_DATA" = "retry_workflow" ]; then
            ACTION="retry"
          fi

          if [ -n "$ACTION" ] && [ "$CHAT_ID" = "$TG_CHAT_ID" ]; then  # 安全：只响应你的 Chat ID
            echo "检测到重试命令/按钮，从 Chat ID: $CHAT_ID"

            # 1. 触发 GitHub Workflow (workflow_dispatch)
            RESPONSE=$(curl -s -w "\n%{http_code}" -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer $GH_PAT" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/actions/workflows/$WORKFLOW_FILE/dispatches \
              -d '{"ref":"main"}')  # ref: main 分支

            HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
            BODY=$(echo "$RESPONSE" | sed '$d')

            if [ "$HTTP_CODE" = "204" ]; then
              # 2. 回复 Telegram 确认
              curl -s -X POST "https://api.telegram.org/bot$TG_BOT_TOKEN/sendMessage" \
                -d chat_id="$CHAT_ID" \
                -d text="✅ Workflow 已触发重试！（检查 Actions 页面）" \
                -d parse_mode="Markdown"
              echo "重试成功触发！"
            else
              curl -s -X POST "https://api.telegram.org/bot$TG_BOT_TOKEN/sendMessage" \
                -d chat_id="$CHAT_ID" \
                -d text="❌ 重试失败：HTTP $HTTP_CODE\n$BODY" \
                -d parse_mode="Markdown"
              echo "重试失败：$BODY"
            fi
            # 处理 /start 命令（欢迎语）
            if [ "$MESSAGE_TEXT" = "/start" ] && [ "$CHAT_ID" = "$TG_CHAT_ID" ]; then
              curl -s -X POST "https://api.telegram.org/bot$TG_BOT_TOKEN/sendMessage" \
                   -d chat_id="$CHAT_ID" \
                   -d text="Bot 已就绪！发 /retry 重试登录任务" \
                   -d parse_mode="Markdown"
            echo "已发送欢迎消息到 Chat ID: $CHAT_ID"
            fi
          else
            echo "忽略：未知命令 ($MESSAGE_TEXT) 或按钮 ($CALLBACK_DATA)，Chat ID 不匹配"
          fi
